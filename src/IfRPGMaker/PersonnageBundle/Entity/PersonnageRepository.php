<?php

namespace IfRPGMaker\PersonnageBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Doctrine\DBAL\DriverManager;

/**
 * PersonnageRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PersonnageRepository extends EntityRepository
{
    public function getConnection()
    {
        return $this->_em->getConnection();
    }
    
    public function find($id)
    {
        $sql = "SELECT * FROM Personnage WHERE nom = ".$id;
        
        $query = $this->createQueryBuilder("p")
                ->where("p.nom = :nom")
                ->setParameter("nom", $id)
                ->getQuery();
                
       $res = $query->getResult();
        if (empty($res))
            $res = NULL;
        else
            $res = $res[0];
        return array("sql" => $sql, "entity"=> $res);
    }
    
    public function findByTaille($taille)
    {
        $sql = "SELECT * FROM Personnage WHERE taille = " .$taille;
        
        $query = $this->createQueryBuilder("p")
                ->where("p.taille = :taille")
                ->setParameter("taille", $taille)
                ->getQuery();
        
        $res = $query->getResult();
        return array("sql" => $sql, "entity"=> $res);
    }
    
    public function findAll()
    {
        $sql = "SELECT * FROM Personnage";
        
        $query = $this->createQueryBuilder("p")->getQuery();
        $res = $query->getResult();
        
        return array("sql" => $sql, "entities" => $res);
    }
    
    public function insert($entity) {
        $sql = "INSERT INTO Personnage (contenu) VALUES ('".$entity->getContenu()."')";
        $conn = $this->getConnection();
        
        $conn->insert('Personnage', array('contenu' => $entity->getContenu()));
        
        return array('sql' => $sql, 'id' => $conn->lastInsertId());
    }
    
    public function delete($entity) {
        $sql = "DELETE FROM Personnage WHERE id=".$entity->getId();
        
        $conn = $this->getConnection();
        $conn->delete('Personnage', array('id' => $entity->getId()));
        
        return $sql;
    }
    
    public function update($entity) {
        $sql = "UPDATE Personnage SET contenu='".$entity->getContenu()."' WHERE id =".$entity->getId();
        
        $conn = $this->getConnection();
        $conn->update('Personnage', 
                array('contenu' => $entity->getContenu()), 
                array('id' => $entity->getId())
                );
        
        return $sql;
    }
}
