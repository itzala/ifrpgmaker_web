<?php

namespace IfRPGMaker\HistoireBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Doctrine\DBAL\DriverManager;

/**
 * IntroRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class IntroRepository extends EntityRepository
{
    public function find($id)
    {
        $sql = "SELECT * FROM Intro WHERE id = ".$id;
        
        $query = $this->createQueryBuilder("i")
                ->where("i.id = :id")
                ->setParameter("id", $id)
                ->getQuery();
                
       $res = $query->getResult();
        
        return array("sql" => $sql, "entity"=> $res[0]);
    }
    
    public function findByContenu($contenu)
    {
        $sql = "SELECT * FROM Intro WHERE contenu = " .$contenu;
        
        $query = $this->createQueryBuilder("i")
                ->where("i.contenu = :contenu")
                ->setParameter("contenu", $contenu)
                ->getQuery();
        
        $res = $query->getResult();
        return array("sql" => $sql, "entity"=> $res);
    }
    
    public function insert($entity) {
        $sql = "INSERT INTO Intro (contenu) VALUES ('".$entity->getContenu()."')";
        $conn = DriverManager::getConnection($params, $config);
        
        $conn->insert('Intro', array('contenu' => $entity->getContenu()));
    }
    
    public function delete($entity) {
        $sql = "DELETE FROM Intro WHERE id=".$entity->getId();
        
        $conn = DriverManager::getConnection($params, $config);
        $conn->delete('Intro', array());
    }
    
    public function update($entity) {
        $sql = "UPDATE Intro SET contenu='".$entity->getContenu."' WHERE id =".$entity->getId();
        
        
    }
}
