<?php

namespace IfRPGMaker\HistoireBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Doctrine\DBAL\DriverManager;

/**
 * ChoixRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ChoixRepository extends EntityRepository
{
    public function getConnection()
    {
        return $this->_em->getConnection();
    }
    
    public function myfind($id)
    {
        $sql = "SELECT * FROM Choix WHERE id = ".$id;
        
        $query = $this->createQueryBuilder("c")
                ->where("c.id = :id")
                ->setParameter("id", $id)
                ->getQuery();
                
       $res = $query->getResult();
        if (empty($res))
            $res = NULL;
        else
            $res = $res[0];
        return array("sql" => $sql, "entity"=> $res);
    }
    
    public function myfindByIntro($intro)
    {
        $sql = "SELECT * FROM Choix WHERE intro_id=" .$intro->getId();
        
        $query = $this->createQueryBuilder("c")
                ->where("c.intro_id = :intro_id")
                ->setParameter("intro_id", $intro->getId())
                ->getQuery();
        
        $res = $query->getResult();
        return array("sql" => $sql, "entity"=> $res);
    }
    
    public function myfindByDescription($description)
    {
        $sql = "SELECT * FROM Choix WHERE description_id=" .$description->getId();
        
        $query = $this->createQueryBuilder("c")
                ->where("c.description_id = :description_id")
                ->setParameter("description_id", $description_id)
                ->getQuery();
        
        $res = $query->getResult();
        return array("sql" => $sql, "entity"=> $res);
    }
    
    public function myfindByParent($parent)
    {
        $sql = "SELECT * FROM Choix WHERE parent_id=" .$parent->getId();
        
        $query = $this->createQueryBuilder("c")
                ->where("c.parent_id = :parent_id")
                ->setParameter("parent_id", $parent->getId())
                ->getQuery();
        
        $res = $query->getResult();
        return array("sql" => $sql, "entity"=> $res);
    }
    
    public function myfindAll()
    {
        $sql = "SELECT * FROM Choix";
        
        $query = $this->createQueryBuilder("c")->getQuery();
        $res = $query->getResult();
        
        return array("sql" => $sql, "entities" => $res);
    }
    
    public function insert($entity) {
        $parent = null;
        if($entity->getParent() != null){
            $parent = $entity->getParent()->getId();
        }
        $sql = "INSERT INTO Choix (intro_id,description_id,parent_id) VALUES (".
                $entity->getIntro()->getId().","
                .$entity->getDescription()->getId().","
                .($parent == null ? "null" : $parent).")";
        $conn = $this->getConnection();
        
        $conn->insert('Choix', array('intro_id' => $entity->getIntro()->getId(),
            'description_id' => $entity->getDescription()->getId(),
            'parent_id' => $parent)
                );
        
        return array('sql' => $sql, 'id' => $conn->lastInsertId());
    }
    
    public function delete($entity) {
        $sql = "DELETE FROM Choix WHERE id=".$entity->getId();
        
        $conn = $this->getConnection();
        $conn->delete('Choix', array('id' => $entity->getId()));
        
        return $sql;
    }
    
    public function update($entity) {
        $parent = null;
        if($entity->getParent() != null){
            $parent = $entity->getParent()->getId();
        }
        $sql = "UPDATE Choix SET intro_id=" .$entity->getIntro()->getId().
                ", description_id=".$entity->getDescription()->getId().
                (", parent_id=".($parent == null ? "null" : $parent).")");
        
        $conn = $this->getConnection();
        $conn->update('Choix', 
                array('intro_id' => $entity->getIntro()->getId(), 
                    'description_id' => $entity->getDescription()->getId(), 
                    'parent_id' => $parent),
                array('id' => $entity->getId())
                );
        
        return $sql;
    }
}
